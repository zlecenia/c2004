# docker-compose.fleet.yml - Fleet Management System
version: '3.8'

networks:
  fleet-network:
    driver: bridge

volumes:
  fdm-data:
  postgres-data:
  redis-data:

services:
  # ============================================
  # Infrastructure
  # ============================================
  
  postgres:
    image: postgres:15-alpine
    container_name: fleet-postgres
    environment:
      POSTGRES_USER: fleet_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: fleet_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - fleet-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fleet_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: fleet-redis
    command: redis-server --appendonly yes --maxmemory 512mb
    volumes:
      - redis-data:/data
    networks:
      - fleet-network
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # ============================================
  # Backend Services
  # ============================================
  
  fleet-data-manager:
    build:
      context: ./services/backend/fleet-data-manager
      dockerfile: Dockerfile
    container_name: fdm-backend
    ports:
      - "8200:8000"
    environment:
      - SERVICE_NAME=fleet-data-manager
      - SERVICE_VERSION=1.0.0
      - DATABASE_URL=postgresql://fleet_user:${POSTGRES_PASSWORD:-changeme}@postgres:5432/fleet_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY_FDM:-dev-secret-key-fdm}
      - CORS_ORIGINS=["http://localhost:8100","http://localhost:8110"]
    volumes:
      - ./services/backend/fleet-data-manager/app:/app/app
      - fdm-data:/data
    networks:
      - fleet-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  fleet-workshop-manager:
    build:
      context: ./services/backend/fleet-workshop-manager
      dockerfile: Dockerfile
    container_name: fwm-backend
    ports:
      - "8201:8000"
    environment:
      - SERVICE_NAME=fleet-workshop-manager
      - SERVICE_VERSION=1.0.0
      - DATABASE_URL=postgresql://fleet_user:${POSTGRES_PASSWORD:-changeme}@postgres:5432/fleet_db
      - REDIS_URL=redis://redis:6379/1
      - SECRET_KEY=${SECRET_KEY_FWM:-dev-secret-key-fwm}
      - FDM_URL=http://fleet-data-manager:8000
    volumes:
      - ./services/backend/fleet-workshop-manager/app:/app/app
    networks:
      - fleet-network
    depends_on:
      postgres:
        condition: service_healthy
      fleet-data-manager:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # ============================================
  # Frontend Services
  # ============================================
  
  connect-display:
    build:
      context: ./services/frontend/connect-display
      dockerfile: Dockerfile
    container_name: connect-display
    ports:
      - "8100:3000"
    environment:
      - VITE_FDM_URL=http://fleet-data-manager:8000
      - VITE_FWM_URL=http://fleet-workshop-manager:8000
      - VITE_CDN_URL=http://localhost:9000
    volumes:
      - ./services/frontend/connect-display/src:/app/src
    networks:
      - fleet-network
    depends_on:
      - fleet-data-manager
    restart: unless-stopped

  # ============================================
  # CDN for Shared Components
  # ============================================
  
  cdn:
    image: nginx:alpine
    container_name: fleet-cdn
    ports:
      - "9000:80"
    volumes:
      - ./shared/components:/usr/share/nginx/html/components:ro
      - ./static:/usr/share/nginx/html/static:ro
      - ./infrastructure/nginx/cdn.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - fleet-network
    restart: unless-stopped
