services:
  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=${NODE_ENV:-production}
    container_name: identification-frontend
    ports:
      - "${FRONTEND_PORT:-8100}:80"
    environment:
      - VITE_API_URL=http://backend:${BACKEND_PORT:-8101}
      - VITE_WS_URL=ws://backend:${BACKEND_PORT:-8101}
      - VITE_CDN_URL=${VITE_CDN_URL:-http://localhost:9000}
      - VITE_LOG_LEVEL=${VITE_LOG_LEVEL:-info}
      - VITE_ENABLE_RFID=${ENABLE_RFID:-true}
      - VITE_ENABLE_QR=${ENABLE_QR:-true}
      - VITE_ENABLE_BARCODE=${ENABLE_BARCODE:-true}
      - VITE_ENABLE_MANUAL=${ENABLE_MANUAL:-true}
    volumes:
      - ./frontend/src:/app/src:ro
      - frontend-dist:/app/dist
    networks:
      - identification-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`identification.localhost`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: identification-backend
    ports:
      - "${BACKEND_PORT:-8101}:8000"
    environment:
      - SERVICE_NAME=${SERVICE_NAME:-identification}
      - SERVICE_VERSION=${SERVICE_VERSION:-1.0.0}
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_WORKERS=${API_WORKERS:-4}
      - API_RELOAD=${API_RELOAD:-false}
      - DATABASE_URL=sqlite:////data/identification.db
      - SECRET_KEY=${SECRET_KEY}
      - CORS_ORIGINS=${CORS_ORIGINS}
      # No Redis needed for simple app
      - ENABLE_RFID=${ENABLE_RFID:-true}
      - ENABLE_QR=${ENABLE_QR:-true}
      - ENABLE_BARCODE=${ENABLE_BARCODE:-true}
      - ENABLE_MANUAL=${ENABLE_MANUAL:-true}
    volumes:
      - ./backend/app:/app/app:ro
      - backend-data:/data
    networks:
      - identification-network
    # No dependencies needed for simple app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.identification.localhost`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  # No Redis needed for simple application

  # Traefik Reverse Proxy (optional, for production)
  traefik:
    image: traefik:v2.10
    container_name: identification-traefik
    ports:
      - "80:80"
      - "8080:8080"  # Dashboard
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - identification-network
    profiles:
      - production

networks:
  identification-network:
    driver: bridge
    name: identification-network

volumes:
  frontend-dist:
  backend-data:
