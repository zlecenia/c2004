// frontend/src/modules/connect-config/connect-config.view.ts - Refactored with PageManager
import { ConnectConfigModule } from './connect-config.module';
import { ConnectConfigPageManager } from './pages';
import { createModuleMenu } from '../../components/connect-menu';

export class ConnectConfigView {
  private currentSection: string = 'system';
  private pageManager: ConnectConfigPageManager;

  constructor(_module: ConnectConfigModule) {
    this.pageManager = new ConnectConfigPageManager();
  }

  render(): HTMLElement {
    const container = document.createElement('div');
    container.className = 'connect-config-compact';
    
    // Update top-bar elements
    this.updateTopBarElements();
    
    // Create layout with menu and content
    container.innerHTML = `
      <div class="module-with-menu">
        <div class="connect-config-menu-container">
          <!-- Menu will be generated by MenuManager -->
        </div>
        <div class="module-main-content" id="connect-config-content">
          <!-- Content will be loaded by PageManager -->
        </div>
      </div>
    `;
    
    // Initialize page manager
    const contentContainer = container.querySelector('#connect-config-content') as HTMLElement;
    if (contentContainer) {
      this.pageManager.initialize(contentContainer);
    }
    
    // Create module menu using MenuManager
    const menuContainer = container.querySelector('.connect-config-menu-container') as HTMLElement;
    if (menuContainer) {
      createModuleMenu('connect-config', menuContainer, {
        onItemClick: (data) => {
          const { item } = data;
          
          // ConnectConfig has only one column, so item.id is the section
          this.currentSection = item.id;
          this.updateTopBarElements();
          this.loadCurrentPage();
        }
      });
    }
    
    // Add custom styles
    this.addCustomStyles();
    
    // Load initial page
    this.loadCurrentPage();
    
    return container;
  }

  /**
   * Load current page based on section
   */
  private loadCurrentPage(): void {
    this.pageManager.loadPage(this.currentSection);
  }

  private updateTopBarElements(): void {
    // Update top-bar submenu
    const submenu = document.getElementById('top-bar-submenu');
    if (submenu) submenu.textContent = '⚙️ Configuration Module';
    
    // Update top-bar section title
    const sectionTitle = document.getElementById('top-bar-section-title');
    if (sectionTitle) {
      const sectionLabel = this.getSectionDisplayName(this.currentSection);
      sectionTitle.textContent = `ConnectConfig - ${sectionLabel}`;
    }
  }

  private getSectionDisplayName(section: string): string {
    const names: Record<string, string> = {
      'system': 'System',
      'devices': 'Urządzenia',
      'security': 'Bezpieczeństwo'
    };
    return names[section] || 'Konfiguracja';
  }

  private addCustomStyles(): void {
    // Check if styles already added
    if (document.getElementById('connect-config-compact-styles')) {
      return;
    }

    const style = document.createElement('style');
    style.id = 'connect-config-compact-styles';
    style.textContent = this.getCompactStyles();
    document.head.appendChild(style);
  }

  private getCompactStyles(): string {
    return `
      .connect-config-compact {
        height: 100%;
        width: 100%;
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
      }

      .module-with-menu {
        display: flex;
        height: 100%;
        width: 100%;
      }
      
      .connect-config-menu-container {
        background: #2a2a2a;
        border-right: 1px solid #e9ecef;
        overflow-y: auto;
      }
      
      .module-main-content {
        flex: 1;
        overflow-y: auto;
        background: white;
      }
    `;
  }
}
